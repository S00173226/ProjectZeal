
@{
    ViewBag.Title = "Devices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model MVC5App.Models.DisplayLocationViewModel


<div class="container">
    <div class="row">
        <div class="form-margin-top">
            <div class="panel panel-primary col-md-11">
                <div class="panel-heading">Map</div>

                <div id="map" class="panel-body col-md-6 mr-3"></div>
                <div class="col-md-6">
                    @using (Html.BeginForm("Devices","Map"))
                    {
                        <div class="form-margin-left row ">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Device: ", new { @class = "form-margin-top" })
                                    @Html.DropDownListFor(model => model.DeviceID, Model.Devices, "-Please Select-", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DeviceID)
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("From Date:")
                                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control from" } })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("To Date:")
                                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control to" } })
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("From Time:")
                                    @Html.TextBoxFor(model => model.StartTime , null, new { @class = "form-control timepicker" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("To Time:")
                                    @Html.TextBoxFor(model => model.EndTime, null, new { @class = "form-control timepicker" })
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input class="btn btn-primary" type="submit" value="Submit" />
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>



    </div>
</div>
<script>

    
    let obj = (@Html.Raw(Model.JSONData));
    
    
    
    function initMap() {     


        var map = new google.maps.Map(document.getElementById('map'),
            {
                center: {
                    lat: obj[0].lat,
                    lng: obj[0].lng
                },
                zoom: 10,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

        var infoWindow = new google.maps.InfoWindow({});

        var marker, i;
        if (obj[0].deviceID != null) {
            for (i = 0; i < obj.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(obj[i].lat, obj[i].lng),
                    map: map
                });

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {

                        infoWindow.setContent("Device ID: " + obj[i].deviceID.toString() + "<br> Device Name: " + obj[i].deviceName + "<br> DateTime: " + obj[i].date + "<br> Lat: " + obj[i].lat + "<br> Lng: " + obj[i].lng);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));
            }
        }

    }
    </script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCDuiBXqhm6RmR07MY6qrz8x8qioFpRAu0&callback=initMap"
        async defer></script>


