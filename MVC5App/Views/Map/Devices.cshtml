
@{
    ViewBag.Title = "Devices";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Test = ViewBag.DeviceList;
}
@model MVC5App.Models.DisplayLocationViewModel


<div class="container">
    <div class="row">
        <div class="form-margin-top">
            <div class="panel panel-primary col-md-11">
                <div class="panel-heading">Map</div>

                <div id="map" class="panel-body col-md-6 mr-3"></div>
                <div class="col-md-6">
                    @using (Html.BeginForm("Devices","Map"))
                    {
                        
                        <div class="form-margin-left row ">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Device: ", new { @class = "form-margin-top" })
                                    @Html.DropDownListFor(model => model.DeviceID, Model.Devices, "-Please Select-", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DeviceID)
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("From Date:")
                                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control from" } })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("To Date:")
                                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control to" } })
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("From Time:")
                                    @Html.TextBoxFor(model => model.StartTime , null, new { @class = "form-control timepicker" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("To Time:")
                                    @Html.TextBoxFor(model => model.EndTime, null, new { @class = "form-control timepicker" })
                                </div>
                            </div>
                        </div>
                        <div class="row form-margin-left">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input class="btn btn-primary" type="submit" value="Submit" />
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>



    </div>
</div>
<script>

    
    let obj = (@Html.Raw(Model.JSONData));
    
    
    
    function initMap() {     

        try {
            var map = new google.maps.Map(document.getElementById('map'),
                {
                    center: {
                        lat: Number.parseFloat(obj.data[0].Latitude),
                        lng: Number.parseFloat(obj.data[0].Longitude)
                    },
                    zoom: 10,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });
        }
        catch
        {
            var map = new google.maps.Map(document.getElementById('map'),
                {
                    center: {
                        lat: 54.347592,
                        lng: -7.646063
                    },
                    zoom: 10,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });
        }
        var infoWindow = new google.maps.InfoWindow({});

        var marker, i;
        if (obj.data[0].Device_ID != null) {
            for (i = 0; i < obj.data.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(Number.parseFloat(obj.data[i].Latitude), Number.parseFloat(obj.data[i].Longitude)),
                    map: map
                });

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {

                        infoWindow.setContent("Device ID: " + obj.data[i].Device_ID.toString() + "<br> Device Name: " + obj.data[i].deviceName + "<br> DateTime: " + obj.data[i].Date_Time_Recorded + "<br> Lat: " + obj.data[i].Latitude + "<br> Lng: " + obj.data[i].Longitude);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));
            }
        }

    }
    </script>
<script src="https://maps.googleapis.com/maps/api/js?key={Your key here}&callback=initMap"
        async defer></script>


